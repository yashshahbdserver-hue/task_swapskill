# Generated by Django 5.0.14 on 2025-07-31 07:47

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_popular', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['category__name', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SkillCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, help_text='CSS icon class', max_length=50)),
                ('color', models.CharField(default='#3B82F6', help_text='Hex color code', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Skill Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='OfferedSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proficiency_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('expert', 'Expert')], max_length=20)),
                ('description', models.TextField(blank=True, help_text='Describe your experience with this skill')),
                ('years_of_experience', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('teaching_preference', models.CharField(choices=[('online', 'Online Only'), ('in_person', 'In-Person Only'), ('both', 'Both Online and In-Person')], default='both', max_length=20)),
                ('max_students_per_session', models.PositiveIntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('total_sessions', models.PositiveIntegerField(default=0)),
                ('average_rating', models.FloatField(default=0.0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offered_skills', to=settings.AUTH_USER_MODEL)),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offered_by_users', to='skills.skill')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('user', 'skill')},
            },
        ),
        migrations.CreateModel(
            name='DesiredSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urgency', models.CharField(choices=[('low', 'Low - Whenever convenient'), ('medium', 'Medium - Within a month'), ('high', 'High - Within a week'), ('urgent', 'Urgent - ASAP')], default='medium', max_length=20)),
                ('description', models.TextField(blank=True, help_text='What would you like to learn about this skill?')),
                ('current_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('expert', 'Expert')], default='beginner', max_length=20)),
                ('target_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('expert', 'Expert')], default='intermediate', max_length=20)),
                ('learning_preference', models.CharField(choices=[('online', 'Online Only'), ('in_person', 'In-Person Only'), ('both', 'Both Online and In-Person')], default='both', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='desired_skills', to=settings.AUTH_USER_MODEL)),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='desired_by_users', to='skills.skill')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('user', 'skill')},
            },
        ),
        migrations.AddField(
            model_name='skill',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skills', to='skills.skillcategory'),
        ),
        migrations.AlterUniqueTogether(
            name='skill',
            unique_together={('name', 'category')},
        ),
        migrations.CreateModel(
            name='SkillMatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('compatibility_score', models.FloatField(default=0.0, help_text='Algorithm calculated compatibility (0-100)')),
                ('is_mutual', models.BooleanField(default=False, help_text='True if both users can teach each other something')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_dismissed', models.BooleanField(default=False)),
                ('desired_skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='skills.desiredskill')),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='learning_matches', to=settings.AUTH_USER_MODEL)),
                ('offered_skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='skills.offeredskill')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teaching_matches', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-compatibility_score', '-created_at'],
                'unique_together': {('teacher', 'learner', 'offered_skill', 'desired_skill')},
            },
        ),
    ]
